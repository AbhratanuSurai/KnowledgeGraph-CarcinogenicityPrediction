/**
 * My Experiment; Just some Random positive and negative examples, taken from lp_21
 */

// declare some prefixes to use as abbreviations
prefixes = [ ("lpclass","https://lpbenchgen.org/class/"), ("carcinogenesis","http://dl-learner.org/carcinogenesis#"), ("owl","http://www.w3.org/2002/07/owl#"), ("rdf","http://www.w3.org/1999/02/22-rdf-syntax-ns#"), 
("xml","http://www.w3.org/XML/1998/namespace"), ("owl11","http://www.w3.org/2006/12/owl11#"), ("xsd","http://www.w3.org/2001/XMLSchema#"), ("lpres","https://lpbenchgen.org/resource/"), 
("rdfs","http://www.w3.org/2000/01/rdf-schema#"), ("lpprop","https://lpbenchgen.org/property/"), 
("owl11xml","http://www.w3.org/2006/12/owl11-xml#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "carcinogenesis.owl"

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { "carcinogenesis:d28", "carcinogenesis:d78", "carcinogenesis:d27" }
lp.negativeExamples = { "carcinogenesis:bond961", "carcinogenesis:non_ar_6c_ring-557", "carcinogenesis:bond7937", "carcinogenesis:d4_14", "carcinogenesis:bond3490", "carcinogenesis:sulfide-2081", "carcinogenesis:d95_9", 
"carcinogenesis:bond9053", "carcinogenesis:bond6346" }

// create learning algorithm to run
alg.type = "celoe"
alg.maxExecutionTimeInSeconds = 1

alg.writeSearchTree = true
